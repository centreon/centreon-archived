var e=Object.defineProperty,r=Object.prototype.hasOwnProperty,t=Object.getOwnPropertySymbols,s=Object.prototype.propertyIsEnumerable,a=(r,t,s)=>t in r?e(r,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[t]=s,i=(e,i)=>{for(var n in i||(i={}))r.call(i,n)&&a(e,n,i[n]);if(t)for(var n of t(i))s.call(i,n)&&a(e,n,i[n]);return e},n=(e,a)=>{var i={};for(var n in e)r.call(e,n)&&a.indexOf(n)<0&&(i[n]=e[n]);if(null!=e&&t)for(var n of t(e))a.indexOf(n)<0&&s.call(e,n)&&(i[n]=e[n]);return i};import{r as l,T as o,p as u}from"./vendor.ecb5856a.js";import{s as d}from"./baseWizard.5f66a05d.js";const c=e=>{var{className:r,children:t,isError:s,tagName:a}=e,u=n(e,["className","children","isError","tagName"]);return l.createElement(a,i({className:o(d.field__msg,d[r],{[d["field__msg--error"]]:!!s})},u),t)};c.defaultProps={className:"",isError:!0,tagName:"div"};let m=0;const h=e=>{class r extends l.Component{constructor(e){super(e),this.state={isFocused:!1},["getId","handleFocus","handleBlur","isInputValue","renderError"].map((e=>this[e]=this[e].bind(this)))}handleFocus(e){const{input:{onFocus:r}}=this.props;this.setState({isFocused:!0}),r&&r(e)}handleBlur(){const{input:{onBlur:e,value:r}}=this.props;if(this.setState({isFocused:!1}),e)return e(r)}getId(){const{name:e}=this.props.input;return this.fieldId||(this.fieldId=++m),`field-${e}-${this.fieldId}`}isInputValue(e){return null!=e&&""!==e}renderError(){const{meta:{touched:e,error:r}}=this.props;return e&&r?l.createElement(c,null,(e=>{if("string"==typeof e)return e;const{name:r,type:t,value:s,message:a}=e;if(a)return a;switch(t){case"required":return`${r||"This field"} is required`;case"email":return"Please enter a valid email address";case"maxLength":return Array.isArray(s)?`${r||"Field"} must have at most ${e.maxLength} items`:`${r||"Field"} must be at most ${e.maxLength} characters long`;case"minLength":return Array.isArray(s)?`${r||"Field"} must have at least ${e.minLength} items`:`${r||"Field"} must be at least ${e.minLength} characters long`;case"invalidDate":return`${r||"Field"} is not valid`;default:return`${r||"Field"} is invalid. Reason: ${e.reason}`}})(r)):null}render(){const{isFocused:r}=this.state,t=this.props,{input:s,meta:a,label:u,autoComplete:c}=t,m=n(t,["input","meta","label","autoComplete"]),h="off"===c?{autoComplete:this.getId()}:{};return l.createElement(e,i(i(i(i({className:o(d.field,{[d["has-danger"]]:a.invalid&&a.touched},{[d["has-value"]]:this.isInputValue(s.value)},{[d["has-focus"]]:r})},s),m),h),{label:u,onFocus:this.handleFocus,onBlur:this.handleBlur,id:this.getId(),error:this.renderError()}))}}return r.displayName=`FieldHoc(${e.displayName})`,r.propTypes={meta:u.object.isRequired,input:u.object.isRequired,label:u.string,onFocus:u.func,onBlur:u.func},r};export{c as F,h as f};
