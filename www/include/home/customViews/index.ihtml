<!-- Start Home -->
<div id='globalView'>
    {if $aclParameters == 1}
    <div class="toggleEdit">
        <a href="#" title="{$editMode}"><img src="./img/icons/edit_mode.png" class="ico-14"></a>
    </div>
    {/if}

    <!-- Action bar -->
    <div id='actionBar' style="display: none;">

        {if $aclAddView == 1}
        <!-- Button for add a view -->
        <div class="cntn">
            <button class='addView btnAction btc bt_success'>{t}Add view{/t}</button>
            <!-- Form for add a view -->
            <div class="position_toggle_wrapper">
                <div class="toggle_wrapper inactive" id="addView">
                <div>
                    <form {$formAddView.attributes}>
                        <table class="table">
                            <tr>
                                <td class="FormHeader" colspan="2">
                                    <h3 style="color:#88b917;">{t}Create a view{/t}</h3>
                                </td>
                            </tr>
                            <tr class="list_two">
                                <td class="FormRowValue" colspan="2">{$formAddView.create_load.html}</td>
                            </tr>
                            <tr class="create_field">
                                <td class="FormRowField">{$formAddView.name.label}</td>
                                <td class="FormRowValue">
                                    <div>{$formAddView.name.html}</div>
                                    <span class="error-msg" style="display: none;">{t}This view name is required{/t}</span>
                                </td>
                            </tr>
                            <tr class="load_field" style="display:none;">
                                <td class="FormRowValue">{$formAddView.viewLoad.html}</td>
                            </tr>
                            <tr class="create_field">
                                <td class="FormRowField">{$formAddView.layout.label}</td>
                                <td class="FormRowValue">{$formAddView.layout.html}</td>
                            </tr>
                            <tr class="create_field">
                                <td class="FormRowField">{$formAddView.public.label}</td>
                                <td class="FormRowValue">{$formAddView.public.html}</td>
                            </tr>
                            <tr>
                                <td colspan="2" class="button_group">
                                {$formAddView.submit.html} {$formAddView.reset.html}
                                </td>
                            </tr>
                        </table>
                        {$formAddView.hidden}
                    </form>
                </div>
            </div>
                <div class="footer_toggle_wrapper"></div>
            </div>
        </div>
        {/if}

        <!-- Button for edit a view -->
        {if $aclEdit == 1}
        <div class="cntn">
            <button class='editView btnAction btnExtraAction btc bt_info'>{t}Edit view{/t}</button>
            <div class="position_toggle_wrapper">
                <div class="toggle_wrapper inactive" id="editView">
                <div>
                    <form {$formEditView.attributes}>
                        <table class="table">
                            <tr>
                                <td class="FormHeader" colspan="2">
                                    <h3 style="color:#00bfb3;">{t}Edit a view{/t}</h3>
                                </td>
                            </tr>
                            <tr>
                                <td class="FormRowField">{$formEditView.name.label}</td>
                                <td class="FormRowValue">
                                    <div>{$formEditView.name.html}</div>
                                    <span class="error-msg" style="display: none;">{t}This view name is required{/t}</span>
                                </td>
                            </tr>
                            <tr>
                                <td class="FormRowField">{$formEditView.layout.label}</td>
                                <td class="FormRowValue">{$formEditView.layout.html}</td>
                            </tr>
                            <tr>
                                <td class="FormRowField">{$formEditView.public.label}</td>
                                <td class="FormRowValue">{$formEditView.public.html}</td>
                            </tr>
                            <tr>
                                <td colspan="2" class="button_group">
                                    {$formEditView.submit.html} {$formEditView.reset.html}
                                </td>
                            </tr>
                        </table>
                        {$formEditView.hidden}
                    </form>
                </div>
            </div>
                <div class="footer_toggle_wrapper"></div>
            </div>
        </div>
        {/if}

        <!-- Button for delete a view -->
        {if $aclDeleteView == 1}
        <button class='deleteView btnExtraAction btc bt_danger'>{t}Delete view{/t}</button>
        {/if}

        <!-- Button for set default a view -->
        {if $aclSetDefault == 1}
        <button class='setDefault btnExtraAction btc bt_default'>{t}Set default{/t}</button>
        {/if}

        <!-- Button for share a view -->
        {if $aclShare == 1}
        <div class="cntn">
            <button class='shareView btnAction btnExtraAction btc bt_info'>{t}Share view{/t}</button>
            <div class="position_toggle_wrapper">
                <div class="toggle_wrapper inactive" id="shareView">
                <form {$formShareView.attributes}>
                    <table class="table">
                        <tr>
                            <td class="FormHeader" colspan="2">
                                <h3 style="color: #00bfb3;">{t}Share view{/t}</h3>
                            </td>
                        </tr>
                        <tr>
                            <td  class="FormRowField FormHeader" colspan="2">{$formShareView.locked_user_id.label}</td>
                        </tr>
                        <tr>
                            <td class="FormRowValue" colspan="2">{$formShareView.locked_user_id.html}</td>
                        </tr>
                        <tr>
                            <td  class="FormRowField FormHeader" colspan="2">{$formShareView.unlocked_user_id.label}</td>
                        </tr>
                        <tr>
                            <td class="FormRowValue" colspan="2">{$formShareView.unlocked_user_id.html}</td>
                        </tr>
                        <tr>
                            <td class="FormRowField FormHeader" colspan="2">{$formShareView.locked_usergroup_id.label}</td>
                        </tr>
                        <tr>
                            <td class="FormRowValue" colspan="2">{$formShareView.locked_usergroup_id.html}</td>
                        </tr>
                        <tr>
                            <td class="FormRowField FormHeader" colspan="2">{$formShareView.unlocked_usergroup_id.label}</td>
                        </tr>
                        <tr>
                            <td class="FormRowValue" colspan="2">{$formShareView.unlocked_usergroup_id.html}</td>
                        </tr>
                    </table>
                    {$formShareView.hidden}
                    <div class="button_group_center">
                        <p>{$formShareView.submit.html}&nbsp;{$formShareView.reset.html}</p>
                    </div>
                </form>
            </div>
                <div class="footer_toggle_wrapper"></div>
            </div>
        </div>
        {/if}

        <!-- Button for add a widget -->
        {if $aclAddWidget == 1}
        <div class="cntn">
            <button class='addWidget btnAction btnExtraAction btc bt_success'>{t}Add widget{/t}</button>
            <div class="position_toggle_wrapper">
                <div class="toggle_wrapper inactive" id="addwdgt">
                <form {$formAddWidget.attributes}>
                    <table class="table">
                        <tr>
                            <td class="FormHeader" colspan="2">
                                <h3 style="color:#88b917;">{t}Add a widget{/t}</h3>
                            </td>
                        </tr>
                        <tr>
                            <td class="FormRowValue" >{$formAddWidget.widget_title.label}</td>
                            <td class="FormRowValue" >{$formAddWidget.widget_title.html}</td>
                        </tr>
                        <tr>
                            <td class="FormRowValue">{$formAddWidget.widget_model_id.label}</td>
                            <td class="FormRowValue">{$formAddWidget.widget_model_id.html}</td>
                        </tr>
                        <tr>
                            <td colspan="2" class="button_group">
                                {$formAddWidget.submit.html} {$formAddWidget.reset.html}
                            </td>
                        </tr>
                    </table>
                    {$formAddWidget.hidden}
                </form>
                </div>
                <div class="footer_toggle_wrapper"></div>
            </div>
        </div>

        {/if}

        <!-- Button for activate rotation -->
        {if $aclRotation == 1}
        <div class="cntn">
            <button class='setRotate btnAction btnExtraAction btc bt_info'>{t}Rotation{/t}</button>
            <div class="position_toggle_wrapper">
                <div class="toggle_wrapper inactive" id="rotationTabs">
                <div id='rotation_timer'></div>
                <div id='timer_value'></div>
                <div class="button_group button_group_center">
                    <input type='button' value='{t}Apply{/t}' class="btc bt_success bt_widget" onClick='submitRotation();'/>
                </div>
            </div>
            </div>
        </div>
        {/if}
    </div>

    <!-- Tab for list of views -->
    <div id="tabs">
        <div class="info_box">
            <h4>
                <img src='./img/icones/16x16/help_button.png' style='padding-right:5px;'>
                {t}No view available. To create a new view, please click "Add view" button.{/t}
            </h4>
        </div>
        <ul class="tabs_header"></ul>
    </div>
</div>
<div hidden>
    <div id="deleteViewConfirm">
        <p>{t}Deleting this view might impact other users. Are you sure you want to do it?{/t}</p>
        <div class="button_group_center">
            <button type="button" class="btc bt_danger">{t}Delete{/t}</button>
            <button type="button" class="btc bt_default">{t}Cancel{/t}</button>
        </div>
    </div>
    <div id="dissociateViewConfirm">
        <p>{t}Dissociate this view ?{/t}</p>
        <div class="button_group_center">
            <button type="button" class="btc bt_danger">{t}Dissociate{/t}</button>
            <button type="button" class="btc bt_default">{t}Cancel{/t}</button>
        </div>
    </div>
    <div id="setDefaultConfirm">
        <p>{t}Set this view as your default view{/t}</p>
        <div class="button_group_center">
            <button type="button" class="btc bt_success">{t}Save{/t}</button>
            <button type="button" class="btc bt_default">{t}Cancel{/t}</button>
        </div>
    </div>
</div>
<script>
{literal}

var rotationTimeout;
var rotationTimer = {/literal}{$rotationTimer}{literal};

/* Display or hide the information for add a new view */
function infoEmptyTab() {
  if (jQuery('#tabs .tabs_header > li').length > 0) {
    jQuery('#tabs .info_box').hide();
    jQuery('.btnExtraAction').show();
  } else {
    jQuery('#tabs .info_box').show();
    jQuery('.btnExtraAction').hide();
  }
}

function addTab(info, init) {
  var init = init || false;
  var $tabEl = jQuery('<li></li>');
  if (info.default) {
    $tabEl.append(jQuery(info.default));
  }
  jQuery('<a></a>')
    .attr('href', './include/home/customViews/views.php?currentView=' + info.custom_view_id)
    .text(info.name).appendTo($tabEl);
  $tabEl.data('name', info.name);
  $tabEl.data('cvId', info.custom_view_id);
  $tabEl.data('public', info.public);
  $tabEl.data('nbCols', info.nbCols);
  jQuery('#tabs .tabs_header').append($tabEl);
  if (false === init) {
    jQuery('#tabs').tabs("destroy");
    jQuery("#tabs").tabs({
      ajaxOptions: { async: true },
      select: function(event, ui) {
        jQuery('.viewBody').empty();
      },
      selected: -1,
      load: function () {
        toggleEdit(true);
      }
    });
    infoEmptyTab();
  }
}

function deleteTab(viewId) {
  jQuery('#tabs .tabs_header > li').each(function (idx, elem) {
    if (jQuery(elem).data('cvId') == viewId) {
      jQuery(elem).remove();
    }
  });
  jQuery('#tabs').tabs("destroy");
  jQuery("#tabs").tabs({
    ajaxOptions: { async: true },
    select: function(event, ui) {
      jQuery('.viewBody').empty();
    },
    selected: -1,
    load: function () {
      toggleEdit(true);
    }
  });

  if (jQuery('#tabs .tabs_header > li').length > 0) {
    jQuery('#tabs').tabs('option', 'active', 1);
  }

  infoEmptyTab();
}

function getTabPos(id) {
  var index = -1;
  jQuery('#tabs .tabs_header > li').each(function (idx, elem) {
    if (jQuery(elem).data('cvId') == id) {
      index = idx;
    }
  });
  return index;
}

/* Set value of timer in the label */
function setTimerLabel() {
  var val = jQuery("#rotation_timer").slider("value");
  jQuery("#timer_value").html(val + " seconds");
}

/* Submit action for add a view */
function submitAddView() {
  if(jQuery('input[name="create_load[create_load]"]:checked').val() === "create"){
    if (jQuery("#formAddView input[name='name']").val().trim() === '') {
      jQuery('.create_field .error-msg').show();
      return false;
    }
  }
  jQuery.ajax({
    type: "post",
    dataType: "xml",
    url: "./include/home/customViews/action.php",
    data: jQuery("#formAddView").serialize(),
    success: function (response) {
      var view = response.getElementsByTagName('custom_view_id');
      var error = response.getElementsByTagName('error');
      if (typeof(view) != 'undefined') {
        var viewId = view.item(0).firstChild.data;
        var widgetName = "";
        if(parseInt(viewId) && getTabPos(viewId) == -1){
            if (jQuery('input[name="create_load[create_load]"]:checked').val() === "create") {
                widgetName = jQuery("#formAddView input[name='name']").val();
            } else if (jQuery('input[name="create_load[create_load]"]:checked').val() === "load") {
                if (jQuery("#formAddView select[name='viewLoad']").val() != "") {
                    widgetName = jQuery("#select2-viewLoad-container .select2-content").text();
                }
            }

            addTab({
              default: false,
              name: widgetName,
              custom_view_id: viewId,
              public: (jQuery('#formAddView input[name="public"]:checked').length ? true : false),
              nbCols: jQuery('#formAddView input[name="layout[layout]"]:checked').val()
            });
            jQuery("#tabs").tabs('option', 'active', getTabPos(viewId));
            jQuery('#formAddView').parents('.toggle_wrapper').hide();
        }else{
            jQuery('#formAddView').parents('.toggle_wrapper').hide();
        }
      } else if (typeof(error) != 'undefined') {
        var errorMsg = error.item(0).firstChild.data;
      }
    }
  });
}

/* Submit action for edit a view */
function submitEditView() {
  if (jQuery("#formEditView input[name='name']").val().trim() === '') {
    jQuery('.create_field .error-msg').show();
    return false;
  }
  jQuery.ajax({
    type: "post",
    dataType: "xml",
    url: "./include/home/customViews/action.php",
    data: jQuery("#formEditView").serialize(),
    success: function (response) {
      var view = response.getElementsByTagName('custom_view_id');
      var error = response.getElementsByTagName('error');
      if (typeof(view) != 'undefined') {
        var viewId = view.item(0).firstChild.data;
        jQuery('#tabs .tabs_header > li').each(function (idx, elem) {
          if (jQuery(elem).data('cvId') == viewId) {
            jQuery(elem).data('name', jQuery("#formEditView input[name='name']").val());
            jQuery(elem).data('nbCols', jQuery('#formEditView input[name="layout[layout]"]:checked').val());
            jQuery(elem).data('public', (jQuery('#formEditView input[name="public"]:checked').length ? true : false));
            jQuery(elem).find('a').text(jQuery("#formEditView input[name='name']").val());
          }
        });
        jQuery('#formEditView').parents('.toggle_wrapper').hide();
        /* Reload tabs for apply */
        jQuery("#tabs").tabs('load', getTabPos(viewId));
      } else if (typeof(error) != 'undefined') {
        var errorMsg = error.item(0).firstChild.data;
      }
    }
  });
}

/* Submit action for add a widget */
function submitAddWidget() {
  jQuery("#formAddWidget input[name='custom_view_id']").val(viewId);
  jQuery.ajax({
    type: "POST",
    dataType: "xml",
    url : "./include/home/customViews/action.php",
    data: jQuery("#formAddWidget").serialize(),
    success: function (response) {
      var view = response.getElementsByTagName('custom_view_id');
      var error = response.getElementsByTagName('error');
      if (view !== undefined) {
        var viewId = view.item(0).firstChild.data;
        jQuery('#tabs').tabs('load', getTabPos(viewId));
        jQuery('#addwdgt').hide();
      } else if (err !== undefined) {
        var errorMsg = err.item(0).firstChild.data;
      }
    }
  });
}

/* Delete action */
function submitDeleteView() {
  var viewId = jQuery(
    jQuery('#tabs .ui-tabs-tab.ui-state-active')[0]
  ).data('cvId');
  jQuery.ajax({
    type: "POST",
    dataType: "xml",
    url: "./include/home/customViews/action.php",
    data: {
      action: "deleteView",
      custom_view_id: viewId
    },
    success :	function(response) {
      var view = response.getElementsByTagName('custom_view_id');
      if (typeof(view) != 'undefined') {
        deleteTab(viewId);
      } else if (typeof(error) != 'undefined') {
        var errorMsg = error.item(0).firstChild.data;
      }
    }
  });
}

/* Set default action */
function submitSetDefaultView() {
  var viewId = jQuery(
    jQuery('#tabs .ui-tabs-tab.ui-state-active')[0]
  ).data('cvId');
  jQuery.ajax({
    type: "POST",
    dataType: "xml",
    url: "./include/home/customViews/action.php",
    data: {
      action: "setDefault",
      custom_view_id: viewId
    }
  });
}

/* Submit action for set rotation */
function submitRotation() {
  var rotationTimer = jQuery("#rotation_timer").slider("value");
  jQuery.ajax({
    type: "POST",
    dataType: "xml",
    url :  "./include/home/customViews/action.php",
    data: {
      action: "setRotate",
      timer: rotationTimer
    },
    success: function (response) {
      var view = response.getElementsByTagName('custom_view_id');
      var error = response.getElementsByTagName('error');
      if (typeof(view) != 'undefined') {
        jQuery("#tabs").tabs('rotate', (rotationTimer * 1000), true);
        jQuery('#rotation_timer').parents('.toggle_wrapper').hide();
      } else if (typeof(err) != 'undefined') {
        var errorMsg = err.item(0).firstChild.data;
      }
    }
  });
}

/* Submit action for share views */
function submitShareView()
{
  var viewId = jQuery(
    jQuery('#tabs .ui-tabs-tab.ui-state-active')[0]
  ).data('cvId');
  var lockedUsers = jQuery("#formShareView").find('select[name="locked_user_id[]"]').val();
  lockedUsers = (lockedUsers == null) ? [] : lockedUsers.filter(function (elem) {return elem !== '';});
  var unlockedUsers = jQuery("#formShareView").find('select[name="unlocked_user_id[]"]').val();
  unlockedUsers = (unlockedUsers == null) ? [] : unlockedUsers.filter(function (elem) {return elem !== '';});
  var lockedUsergroups = jQuery("#formShareView").find('select[name="locked_usergroup_id[]"]').val();
  lockedUsergroups = (lockedUsergroups == null) ? [] : lockedUsergroups.filter(function (elem) {return elem !== '';});
  var unlockedUsergroups = jQuery("#formShareView").find('select[name="unlocked_usergroup_id[]"]').val();
  unlockedUsergroups = (unlockedUsergroups == null) ? [] :
  unlockedUsergroups.filter(function (elem) {return elem !== '';});

  var postData = {
    custom_view_id: viewId,
    lockedUsers: lockedUsers.filter(function (elem) {return elem !== '';}),
    unlockedUsers: unlockedUsers.filter(function (elem) {return elem !== '';}),
    lockedUsergroups: lockedUsergroups.filter(function (elem) {return elem !== '';}),
    unlockedUsergroups: unlockedUsergroups.filter(function (elem) {return elem !== '';}),
    action: 'share',
    centreon_token: jQuery("#formShareView").find('input[name="centreon_token"]').val(),
  };

  jQuery.ajax({
    type: "POST",
    dataType: "xml",
    url: "./include/home/customViews/action.php",
    data: postData,
    success: function (response) {
      var view = response.getElementsByTagName('custom_view_id');
      var error = response.getElementsByTagName('error');
      if (typeof(view) != 'undefined') {
        jQuery('#shareView').hide();
      } else if (typeof(error) != 'undefined') {
        var errorMsg = error.item(0).firstChild.data;
      }
    }
  });
}

/**
 * Initializes Colorbox
 */
function initColorbox(selector, url, w, h)
{
  jQuery(selector).colorbox({
    href: url,
    iframe: true,
    overlayClose: false,
    width: w,
    height: h,
    opacity: 0.7
  });
}

function toggleEdit(show) {
  show =  typeof show !== 'undefined' ? show : null;

  var $el = jQuery('.toggleEdit');
  if (show === false || (show === null && $el.hasClass('edit'))) {
    show = false;
  } else {
    show = true;
  }


  if (show === false) {
    $el.removeClass('edit');
    jQuery('#actionBar').hide();

    jQuery('.portlet-header').each(function(index) {
      var widgetTitle = jQuery(this).find('.widgetTitle').text().trim();
      if (widgetTitle == 'Click to edit') {
            jQuery(this).find('.widgetTitle').hide();
      }
      jQuery(this).find('.ui-icon-wrench').hide();
      jQuery(this).find('.ui-icon-trash').hide();
    });
    $el.find('img').attr('src','./img/icons/edit_mode.png');
  } else if (show === true) {
      jQuery('#actionBar').show();
      $el.addClass('edit');
    jQuery('.portlet-header').each(function() {
        jQuery(this).show();
        jQuery(this).find('.widgetTitle').show();
        jQuery(this).find('.ui-icon-wrench').show();
        jQuery(this).find('.ui-icon-trash').show();
    });
    $el.find('img').attr('src','./img/icons/no_edit_mode.png');
  }

  jQuery.ajax({
    url: './include/home/customViews/action.php',
    data: {
      action: 'defaultEditMode',
      editMode: show
    },
    type: 'POST'
  });
}

/* Share view functions */

function removeUserFromView(user_id) {

  var viewId = jQuery(
    jQuery('#tabs .ui-tabs-tab.ui-state-active')[0]
  ).data('cvId');
  jQuery.ajax({
    type: "POST",
    dataType: "xml",
    url: "./include/home/customViews/action.php",
    data: {
      action: "remove",
      custom_view_id: viewId,
      user_id: user_id
    },
    success: function(response) {
      var view = response.getElementsByTagName('custom_view_id');
      var error = response.getElementsByTagName('error');
      if (typeof(view) != 'undefined') {
        jQuery('.removeViewer').each(function () {
          var $el = jQuery(this);
          if ($el.data('id') == user_id) {
            $el.parents('.badge').remove();
          }
        });
      } else if (typeof(error) != 'undefined') {
        var errorMsg = error.item(0).firstChild.data;
      }
    }
  });
}

function removeUsergroupFromView(usergroup_id) {
  var viewId = jQuery(
    jQuery('#tabs .ui-tabs-tab.ui-state-active')[0]
  ).data('cvId');
  jQuery.ajax({
    type: "POST",
    dataType: "xml",
    url: "./include/home/customViews/action.php",
    data: {
      action: "removegroup",
      custom_view_id: viewId,
      usergroup_id:	usergroup_id
    },
    success: function(response) {
      var view = response.getElementsByTagName('custom_view_id');
      var error = response.getElementsByTagName('error');
      if (typeof(view) != 'undefined') {
        jQuery('.removeViewergroup').each(function () {
          var $el = jQuery(this);
          if ($el.data('id') == usergroup_id) {
            $el.parents('.badge').remove();
          }
        });
      } else if (typeof(error) != 'undefined') {
        var errorMsg = error.item(0).firstChild.data;
      }
    }
  });
}

jQuery(function () {
  jQuery('#tabs').tabs();

  /* Initialize buttons */
  jQuery('.addView').button({icon: "ui-icon-plus"}).on('click', function () {
    //reset select2
    jQuery("#formAddView #viewLoad").empty().append($('<option>'));
    //reset add view form
    jQuery('input[name="create_load[create_load]"][value="create"]').prop('checked', true);
    jQuery('.load_field').css('display','none');
    jQuery('.create_field').css('display','table-row');

    jQuery('#formAddView input[name="name"]').val('');
    jQuery('#formAddView input[name="layout[layout]"][value="column_1"]').prop('checked', true);
    jQuery('#formAddView input[name="public"]').prop('checked', false);
  });

    jQuery('.setDefault').button({ icons : { primary: 'ui-icon-arrowreturnthick-1-w'}}).on('click', function () {
        jQuery("#setDefaultConfirm").centreonPopin({
            open: true
        });
    });

  jQuery('.editView').button({ icons : { primary: 'ui-icon-gear'}});

    jQuery('.deleteView').button({ icons : { primary: 'ui-icon-trash'}}).on('click', function () {
        jQuery("#deleteViewConfirm").centreonPopin({
            open: true
        });
    });

  jQuery('.shareView').button({ icons : { primary: 'ui-icon-folder-open'}}).on('click', function () {
    /* Get default information for a share view */
    var viewId = jQuery(
      jQuery('#tabs .ui-tabs-tab.ui-state-active')[0]
    ).data('cvId');
    jQuery("#locked_user_id option").remove();
    jQuery("#unlocked_user_id option").remove();
    jQuery("#locked_usergroup_id option").remove();
    jQuery("#unlocked_usergroup_id option").remove();
    jQuery.ajax({
      url: './api/internal.php?object=centreon_home_customview&action=linkedUsers&q=' + viewId,
      method: 'get',
      methodType: 'json',
      success: function (data) {
        Object.keys(data).map(function(key) {
          if (data[key].locked == "1") {
            jQuery("#locked_user_id").append(
              '<option selected value="' + data[key].user_id + '">' + data[key].contact_name + '</option>'
            );
          } else {
            jQuery("#unlocked_user_id").append(
              '<option selected value="' + data[key].user_id + '">' + data[key].contact_name + '</option>'
            );
          }
        });
      }
    });
    jQuery.ajax({
      url: './api/internal.php?object=centreon_home_customview&action=linkedUsergroups&q=' + viewId,
      method: 'get',
      methodType: 'json',
      success: function (data) {
        Object.keys(data).map(function(key) {
          if (data[key].locked == "1") {
            jQuery("#locked_usergroup_id").append(
              '<option selected value="' + data[key].usergroup_id + '">' + data[key].cg_name + '</option>'
            );
          } else {
            jQuery("#unlocked_usergroup_id").append(
              '<option selected value="' + data[key].usergroup_id + '">' + data[key].cg_name + '</option>'
            );
          }
        });
      }
    });
  });
  jQuery('.addWidget').button({ icons : { primary: 'ui-icon-plus'}});
  jQuery('.setRotate').button({ icons : { primary: 'ui-icon-play'}});

  jQuery('input[name="create_load[create_load]"]').change(function (){
    if (jQuery(this).val() == 'load'){
        jQuery('.load_field').css('display','table-row');
        jQuery('.create_field').css('display','none');
    } else if (jQuery(this).val() == 'create'){
        jQuery('.load_field').css('display','none');
        jQuery('.create_field').css('display','table-row');
    }
  });

  jQuery('.addWidget').on('click', function (event) {
      jQuery("#formAddWidget input[name='widget_title']").val('');
  });


  /* Initialize tabs */
  jQuery(".ui-tabs-panel").css('overflow', 'auto');

  jQuery("#rotation_timer").slider({
    value: rotationTimer,
    min: 0,
    max: 300,
    step: 5,
    slide: function(event, ui) {
      jQuery("#timer_value").html(ui.value + " seconds");
    }
  });
  jQuery("#timer_value").html(rotationTimer + " seconds");
  jQuery("input[type=button]").button();


  /* Add event for close all form */
  jQuery(document).on('click', function (e) {
    /*
     * if were are in dropdown selection or popin select all.
     */
    if (jQuery(e.target).parents('.cntn').length === 0 &&
        jQuery(e.target).parents('.select2-dropdown').length === 0 &&
        jQuery(e.target).parents('.centreon-popin').length === 0 &&
        jQuery(e.target).hasClass('select2-selection__choice__remove') === false) {
      jQuery('.toggle_wrapper').hide();
    }
  });

  jQuery('.editView').on('click', function () {
    var tabActive = jQuery(
      jQuery('#tabs .ui-tabs-tab.ui-state-active')[0]
    );

    jQuery('#formEditView input[name="custom_view_id"]').val(tabActive.data('cvId'));
    jQuery('#formEditView input[name="name"]').val(tabActive.data('name'));
    jQuery('#formEditView input[name="layout[layout]"][value="' + tabActive.data('nbCols') + '"]').prop('checked', true);
    if (tabActive.data('public') == '1') {
        jQuery('#formEditView input[name="public"]').prop('checked', true);
    } else {
        jQuery('#formEditView input[name="public"]').prop('checked', false);
    }
  });

  /* Initialize popin */
  jQuery('#deleteViewConfirm button.bt_danger').on('click', function () {
    submitDeleteView();
    jQuery('#deleteViewConfirm').centreonPopin("close");
  });

  jQuery('#dissociateViewConfirm button.bt_danger').on('click', function () {
        removeUserFromView(idUser);
        window.top.location = './main.php?p=103';
      jQuery('#dissociateViewConfirm').centreonPopin("close");
  });

  jQuery('#setDefaultConfirm button.bt_success').on('click', function () {
      submitSetDefaultView();
      jQuery('#setDefaultConfirm').centreonPopin("close");
  });

  /* Add event action for display form */
  jQuery('.btnAction').on('click', function (e) {
    var self = this;
    e.stopPropagation();
    e.preventDefault();
    jQuery('.toggle_wrapper').filter(function () {
      if (jQuery(this).parents('.cntn').find(self).length === 0) {
        return true;
      }
      return false;
    }).hide();

    jQuery(this).parents('.cntn').find('.error-msg').hide();
    jQuery(this).parents('.cntn').find('.toggle_wrapper').toggle(0);
  });

  infoEmptyTab();
  var tabLoops = 0;

  /* Load custom views */
  jQuery.ajax({
    url: './api/internal.php?object=centreon_home_customview&action=listViews',
    method: 'get',
    methodType: 'json',
    success: function (data) {

      if (data.tabs.length > 0) {
        jQuery('#tabs').tabs("destroy");

        jQuery.each(data.tabs, function (idx, tab) {
          addTab(tab, true);
        });

        var defaultPosition = getTabPos(data.current);

        jQuery("#tabs").tabs({
          active: defaultPosition,
          beforeLoad: function( event, ui ) {
            // prevent memory overflow
            if (tabLoops > 60 && $(event.target).tabs('option', 'active') == defaultPosition) {
                window.location.reload();
            }
          },
          load: function(event, ui) {
              toggleEdit(jQuery('.toggleEdit').hasClass('edit'));
          },
          activate: function( event, ui ) {
            tabLoops++;
            columnClass = null;
            viewId = null;
            permission = null;
            ownership = null;
            idUser = null;
            deleteView = function(){};
            deleteWidget = function(){};
            savePositions = function(){};
            setDefault = function(){};
            ui.oldPanel.empty();
          }
        });
        jQuery("#tabs").tabs('rotate', (rotationTimer * 1000), true);
      }

      infoEmptyTab();
    }
  });

  /* Widget information */
  jQuery('.widget-list tr td:nth-child(2)').on('mouseenter', function () {
    var $td = jQuery(this);
    var position = $td.offset();
    var $popin = jQuery('<div></div>')
      .addClass('widget-description')
      .appendTo('body');
    jQuery('<div></div>').text($td.data('description')).appendTo($popin);

    /* Bottom footer */
    var $bottom = jQuery('<div></div>');
    jQuery('<div></div>').css('float', 'left')
      .text('Version ' + $td.data('version')).appendTo($bottom);
    jQuery('<div></div>').css('float', 'right')
      .text($td.data('author')).appendTo($bottom);
    $popin.append($bottom);

    $popin.show()
      .css({
        left: position.left - $popin.width() - 10,
        top: position.top
      });
  });

  jQuery('.widget-list tr td:nth-child(2)').on('mouseout', function () {
    jQuery('.widget-description').hide().remove();
  });

  /* Add filters on widget */
  jQuery('#widgetSearch').on('keydown', function () {
    var searchValue = jQuery(this).val();
    jQuery('.widget-list tbody tr').show();
    jQuery('.widget-list tbody tr').filter(function () {
      var regexp = new RegExp(searchValue, 'i');
      var $tr = jQuery(this);
      var $td = jQuery($tr.children()[1]);
      if ($td.text().search(regexp) === -1) {
        return true;
      }
      return false;
    }).hide();
  });

  /* Toggle edit mode or view mode */
  jQuery(".toggleEdit > a").on('click', function () {
    toggleEdit();
  });

});
{/literal}
</script>
