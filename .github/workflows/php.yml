name: Backend

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    paths:
      - 'src/**'
      - 'www/**'
      - '!www/front_src/**'
      - 'composer.*'
      - 'doc/API/*.yaml'
      - 'container.php'

jobs:

  be-dependencies:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2

    - name: Cache Composer
      uses: actions/cache@v2
      id: composer-cache
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

    - name: Install composer dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest


  be-style:

    needs: be-dependencies

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
    - name: Load composer dependencies
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

    - id: files
      uses: jitterbit/get-changed-files@v1
    - run: |
        ./vendor/bin/phpcs --standard=./ruleset.xml --report=checkstyle --report-file=./checkstyle-be.xml ${{ steps.files.outputs.added }} ${{ steps.files.outputs.modified }}
      continue-on-error: true
    - run: |
        ./vendor/bin/phpstan analyse -c phpstan.neon --level 8 --no-interaction --no-progress --error-format=checkstyle ${{ steps.files.outputs.added }} ${{ steps.files.outputs.modified }} > phpstan.xml
      continue-on-error: true
    #- name: Check php coding style
    #  run: |
    #    FILES=$(git diff --name-only HEAD origin/master);
    #    if [ ! -z "$FILES" ]; then phpcs $FILES; fi
    #  run: composer run codestyle:ci
    #- run: ./vendor/bin/cs2pr ./build/checkstyle-be.xml
    #  if: always()

    #- run: echo "${PWD}/vendor/bin" >> $GITHUB_PATH

    #- name: Run linters
    #  uses: wearerequired/lint-action@v1
    #  with:
    #    github_token: ${{ secrets.GITHUB_TOKEN }}
    #    # Enable linters
    #    php_codesniffer: true
    #    # Optional: Ignore warnings
    #    php_codesniffer_args: "--standard=./ruleset.xml ./src"

    #- name: Lint Code Base
    #  uses: github/super-linter@v3
    #  env:
    #    VALIDATE_ALL_CODEBASE: false
    #    VALIDATE_PHP_PHPCS: true
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    #- name: Run test suite
    #  run: ./vendor/bin/phing unittest

    - name: Checkout Private GitHub Action Repo
      uses: actions/checkout@v2
      with:
        repository: kduret/custom-github-action
        path: my-action
        ref: master
        token: ${{ secrets.custom_github_action }} # stored in GitHub secrets

    #- name: Run My Action
    #  uses: ./my-action
    #  with:
    #    who-to-greet: 'Kev'

    - name: Annotate PR from PHPCS result
      run: |
        ./my-action/cs2pr.php --prefix=PHPCS checkstyle-be.xml

    - name: Annotate PR from PHPSTAN result
      if: always()
      run: |
        ./my-action/cs2pr.php --prefix=PHPSTAN phpstan.xml


  be-unit-tests:

    needs: be-dependencies

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Load composer dependencies
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        # no restore-keys here, so we only accept this exact version

    - name: PHPUnit tests
      run: composer run test:ci

#      continue-on-error: true

#    - name: Publish Test Report
#      uses: mikepenz/action-junit-report@v1
#      with:
#        report_paths: 'phpunit.xml'
#        github_token: ${{ secrets.GITHUB_TOKEN }}
