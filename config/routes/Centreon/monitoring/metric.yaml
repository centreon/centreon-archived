monitoring.metric.getServiceMetrics:
    methods: GET
    path: /monitoring/hosts/{hostId}/services/{serviceId}/metrics/start/{start}/end/{end}
    requirements:
        hostId: '\d+'
        serviceId: '\d+'
        start: '\S+'
        end: '\S+'
    controller: 'Centreon\Application\Controller\Monitoring\MetricController::getServiceMetrics'
    condition: "request.attributes.get('version') >= 2.0"

monitoring.metric.getServiceStatus:
    methods: GET
    path: /monitoring/hosts/{hostId}/services/{serviceId}/status/start/{start}/end/{end}
    requirements:
        hostId: '\d+'
        serviceId: '\d+'
        start: '\S+'
        end: '\S+'
    controller: 'Centreon\Application\Controller\Monitoring\MetricController::getServiceStatus'
    condition: "request.attributes.get('version') >= 2.0"

monitoring.metric.getServicePerformanceMetrics:
    methods: GET
    path: /monitoring/hosts/{hostId}/services/{serviceId}/metrics/performance
    requirements:
        hostId: '\d+'
        serviceId: '\d+'
    controller: 'Centreon\Application\Controller\Monitoring\MetricController::getServicePerformanceMetrics'
    condition: "request.attributes.get('version') >= 2.0"

monitoring.metric.getServiceStatusMetrics:
    methods: GET
    path: /monitoring/hosts/{hostId}/services/{serviceId}/metrics/status
    requirements:
        hostId: '\d+'
        serviceId: '\d+'
    controller: 'Centreon\Application\Controller\Monitoring\MetricController::getServiceStatusMetrics'
    condition: "request.attributes.get('version') >= 2.0"

monitoring.metric.getMetaServicePerformanceMetrics:
    methods: GET
    path: /monitoring/metaservices/{metaId}/metrics/performance
    requirements:
        metaId: '\d+'
    controller: 'Centreon\Application\Controller\Monitoring\MetricController::getMetaServicePerformanceMetrics'
    condition: "request.attributes.get('version') >= 2.1"

monitoring.metric.getMetaServiceStatusMetrics:
    methods: GET
    path: /monitoring/metaservices/{metaId}/metrics/status
    requirements:
        metaId: '\d+'
    controller: 'Centreon\Application\Controller\Monitoring\MetricController::getMetaServiceStatusMetrics'
    condition: "request.attributes.get('version') >= 2.1"
